<?php

namespace AppBundle\Repository;

/**
 * RendezvousRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RendezvousRepository extends \Doctrine\ORM\EntityRepository
{
    public function findNext($givenUser){
        return $this->getEntityManager()
            ->createQuery(
                'select r
                    from AppBundle:rendezvous r
                    where r.endDate >= :now and r.user = :user'
            )->setParameter('user',$givenUser)->setParameter('now', new \DateTime())->execute();
    }

    public function findAllNext(){
        return $this->getEntityManager()
            ->createQuery(
                'select r
                    from AppBundle:rendezvous r
                    where r.startDate >= :now'
            )->setParameter('now', new \DateTime())->execute();
    }

    public function findNextForClient($client){
        return $this->getEntityManager()
            ->createQuery(
                'select r
                    from AppBundle:rendezvous r
                    where r.startDate >= :now and r.client = :client ORDER BY r.startDate ASC'
            )->setParameter('client',$client)->setParameter('now', new \DateTime())->execute();
    }

    public function findLastForClient($client){
        return $this->getEntityManager()
            ->createQuery(
                'select r
                    from AppBundle:rendezvous r
                    where r.startDate <= :now and r.client = :client ORDER BY r.startDate ASC'
            )->setParameter('client',$client)->setParameter('now', new \DateTime())->execute();
    }

    public function countTotalMonthly($month, $year){
        return $this->getEntityManager()
            ->createQuery(
                'select count(r.id) as total
                    from AppBundle:rendezvous r
                    where month(r.startDate) = :month and year(r.startDate) = :year'
            )->setParameter('month',$month)->setParameter('year',$year)->execute();
    }
}
