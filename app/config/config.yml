imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@ProBundle/Resources/config/services.yml" }
    - { resource: "@ClientBundle/Resources/config/services.yml" }
    - { resource: "@AdminBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    locales: en|fr

framework:
    #esi: ~
    translator: { fallbacks: [%locale%] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
        type: be_simple_i18n
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: %locale%
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
    templating:
        engines: ['twig']

fos_user:
        db_driver: orm # other valid values are 'mongodb' and 'couchdb'
        firewall_name: main
        user_class: AppBundle\Entity\User
        from_email:
            address: "noreply@rendezvous.lu"
            sender_name: "RendezVous"
        registration:
            form:
                type: AppBundle\Form\RegistrationType

fos_elastica:
#    serializer:
#        serializer: jms_serializer

    clients:
        default: { host: localhost, port: 9200 }
    indexes:
            app:
                settings:
                    index:
                        analysis:
                            analyzer:
                                autocomplete_analyzer:
                                    type: custom
                                    tokenizer: autocomplete_tokenizer
                                    filter: [lowercase, asciifolding]
                                location_tokenizer:
                                    type: custom
                                    tokenizer: location_tokenizer
                                    filter: [lowercase, asciifolding]
                            tokenizer:
                                autocomplete_tokenizer:
                                    type: nGram
                                    min_gram: 3
                                    max_gram: 20
                                location_tokenizer:
                                    type: nGram
                                    min_gram: 6
                                    max_gram: 20
                types:
                    offer:
                        properties:
                            id: ~
                            description: ~
                            title: { type: text, analyzer: autocomplete_analyzer }
                            updateDate: { type: date }
                            location: { type: text, analyzer: location_tokenizer }
                            archived: ~
                            contractType:
                              type: object
                              properties:
                                name: { type: text }
                            tag:
                              type: object
                              properties:
                                name: { type: text }
                            employer:
                              type: object
                              properties:
                                name: { type: text }
                        persistence:
                        # the driver can be orm, mongodb or phpcr
                            driver: orm
                            model: AppBundle\Entity\Offer
                            provider: ~
                            finder: ~

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_themes:
            - 'bootstrap_3_layout.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        dql:
            datetime_functions:
                DAY: DoctrineExtensions\Query\Mysql\Day
                MONTH: DoctrineExtensions\Query\Mysql\Month
                YEAR: DoctrineExtensions\Query\Mysql\Year

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    encryption: %mailer_encryption%
    auth_mode:  %mailer_auth_mode%
    host:  %mailer_host%
    port: %mailer_port%
    username: %mailer_user%
    password: %mailer_password%

vich_uploader:
    db_driver: orm
    mappings:
        employer_image:
            uri_prefix: /images/employer
            upload_destination: '%kernel.project_dir%/web/uploads/images/employer'
            namer: app.employer_image


ivory_google_map:
    map:
        debug: "%kernel.debug%"
        language: "%locale%"
        api_key: "AIzaSyB_mt43fWT1l6hneIIuLQkFzd13BqFzafY"
    geocoder:
        client: httplug.client.default
        message_factory: httplug.message_factory.default


httplug:
    classes:
        client: Http\Adapter\Guzzle6\Client
        message_factory: Http\Message\MessageFactory\GuzzleMessageFactory
    clients:
        acme:
            factory: httplug.factory.guzzle6

be_simple_i18n_routing:
    locales:
        supported: ['en', 'fr']
        filter: true
        strict: true

sonata_seo:
    encoding:         UTF-8
    page:
        title:            Sonata Project
        default:          sonata.seo.page.default
        metas:
            name:
                keywords:             foo bar
                description:          The description
                robots:               index, follow

            property:
                # Facebook application settings
                #'fb:app_id':          XXXXXX
                #'fb:admins':          admin1, admin2

                # Open Graph information
                # see http://developers.facebook.com/docs/opengraphprotocol/#types or http://ogp.me/
                'og:site_name':       Sonata Project Sandbox
                'og:description':     A demo of the some rich bundles for your Symfony2 projects

            http-equiv:
                'Content-Type':         text/html; charset=utf-8
                #'X-Ua-Compatible':      IE=EmulateIE7

            charset:
                UTF-8:    ''

        head:
            'xmlns':              http://www.w3.org/1999/xhtml
            'xmlns:og':           http://opengraphprotocol.org/schema/
            #'xmlns:fb':           "http://www.facebook.com/2008/fbml"