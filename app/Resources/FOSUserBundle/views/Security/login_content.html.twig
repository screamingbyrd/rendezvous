{% trans_default_domain 'FOSUserBundle' %}


        <div class="container login rendezvous-container">
            <div class="col-md-4 shadow-box">
                {% if error %}
                    <div style="color: red">{{ error.messageKey|trans(error.messageData, 'security') }}</div>
                {% endif %}
                <div class="login-register">

                    <h3 class="title">{{ 'login.title'|trans }}</h3>

                    <p>{{ 'login.subtitle'|trans }}</p>

                    <p style="margin-bottom: 15px;">{{ 'login.noaccount'|trans }} <a href="{{ path('create_client') }}">  {{ 'login.client'|trans }}</a> {{ 'or'|trans }} <a href="{{ path('create_pro') }}">{{ 'login.pro'|trans }}</a> </p>


                    <div>
                        {#<fb:login-button scope="public_profile,email" onlogin="checkLoginState();">#}
                        {#</fb:login-button>#}

                        <div id="status">
                        </div>
                    </div>
                </div>

                <hr>

                <div class="login-login">

                    <h3 class="login-login-title">{{ 'login.sign'|trans }}</h3>

                    <form action="{{ path("fos_user_security_check") }}" method="post">
                        {% if csrf_token %}
                            <input type="hidden" name="_csrf_token" value="{{ csrf_token }}" />
                        {% endif %}
                        <fieldset>
                            <div class="form-group">
                                <label for="username">{{ 'security.login.username'|trans }}</label>
                                <input class="form-control" type="text" id="username" name="_username" value="{{ last_username }}" required="required" autocomplete="username" />
                            </div>
                            <div class="form-group">
                                <label for="password">{{ 'security.login.password'|trans }}</label>
                                <input class="form-control password-field" type="password" id="password" name="_password" required="required" autocomplete="current-password" />
                            </div>
                            <div class="form-group">
                                <div style="display: flex">
                                    <input class="show-password" type="checkbox" onclick="myFunction()"><div>{{ 'security.login.showPassword'|trans }}</div>
                                </div>

                            </div>
                            {#<div class="checkbox">#}
                                {#<label>#}
                                    {#<input type="checkbox" id="remember_me" name="_remember_me" value="on" />#}
                                    {#<label for="remember_me">{{ 'security.login.remember_me'|trans }}</label>#}
                                {#</label>#}
                            {#</div>#}
                            <a href="{{ path('fos_user_resetting_request') }}">{{ 'login.forgotPassword.title'|trans }}</a>
                            <input class="rendezvous-button login login-button" type="submit" id="_submit" name="_submit" value="{{ 'security.login.submit'|trans }}" />
                        </fieldset>
                    </form>
                </div>
            </div>
        </div>

    <script>
        function myFunction() {
            var x = document.getElementsByClassName("password-field");
            for (var i = 0; i < x.length; i++) {
                if (x[i].type === "password") {
                    x[i].type = "text";
                } else {
                    x[i].type = "password";
                }
            }
        }

        window.fbAsyncInit = function() {
            FB.init({
                appId: '1225236684282099',
                cookie: true,
                xfbml: true,
                version: 'v3.1'
            });



            (function (d, s, id) {
                var js, fjs = d.getElementsByTagName(s)[0];
                if (d.getElementById(id)) {
                    return;
                }
                js = d.createElement(s);
                js.id = id;
                js.src = "https://connect.facebook.net/en_US/sdk.js";
                fjs.parentNode.insertBefore(js, fjs);
            }(document, 'script', 'facebook-jssdk'));

            window.fbAsyncInit = function () {
                FB.getLoginStatus(function (response) {
                    statusChangeCallback(response);
                });

                FB.ui({
                    method: 'share',
                    href: 'https://developers.facebook.com/docs/',
                }, function (response) {
                });
            };
        }
        function checkLoginState() {
            FB.getLoginStatus(function(response) {
                console.log(response);
            });
        }
    </script>



